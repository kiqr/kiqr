#!/usr/bin/env ruby

require "rubygems"
require "bundler/setup"
require 'active_support/core_ext/string/inflections' # For inflections like pluralize, singularize

require_relative "kiqr/utils"

origin_url = `git remote get-url origin`.strip
origin_exists = system('git remote get-url origin > /dev/null 2>&1')
kiqr_remote_exists = system('git remote get-url kiqr  > /dev/null 2>&1')
kiqr_remote_url = "git@github.com:kiqr/kiqr.git"

# => Abort if the origin remote is the kiqr/kiqr repository
if origin_exists && origin_url.include?("kiqr/kiqr")
  fail_with_message <<~WARNING

  WARNING: It looks like your 'origin' remote is set to 'github.com/kiqr/kiqr'.

  This suggests that you may not have run the configuration script for this repo yet, or are developing
  directly on the 'kiqr/kiqr' repository. This script is designed to be run in an app repository.

  🚨 Aborting update.

  👉 To resolve this, it's strongly recommended that you run bin/configure first.
  WARNING
end

# check_for_uncommited_changes()

# => Setup the 'kiqr' remote
say "🔍  Checking for the 'kiqr' remote..."
if kiqr_remote_exists
  say "✅  The 'kiqr' remote exists."
else
  say "🚨  The 'kiqr' remote does not exist. Adding it now..."
  run_command("git remote add kiqr #{kiqr_remote_url}")
  say "✅  The 'kiqr' remote has been added."
end

# Check for incomplete merges
if File.exist?(".git/MERGE_HEAD")
  say "🚨  An incomplete merge is detected. You need to resolve it before proceeding."
  say "👉  Run 'git merge --abort' to abort the merge."
  exit 1
end

# => Fetch the 'kiqr' remote
say "🔍  Fetching the 'kiqr' remote..."
run_command("git fetch kiqr main --quiet")

# => Check for updates from the 'kiqr' remote
current_branch = `git branch --show-current`.strip
remote_branch = "kiqr/main"

say "🔍  Checking for updates from the 'kiqr' remote on branch #{current_branch}..."

behind_commits_count = `git rev-list --count #{current_branch}..#{remote_branch}`.strip.to_i
if behind_commits_count.zero?
  say "✅  Your branch is up to date with '#{remote_branch}'."
  exit 0
end

pluralized_text = "#{behind_commits_count} commit".pluralize(behind_commits_count).bold.blue
changelog = `git log --oneline #{current_branch}..#{remote_branch}`

say "\nYour branch is behind '#{remote_branch}' by #{pluralized_text}."

say "\nChangelog:".bold
say changelog
say "\n"

say "🔍  To update, merge the latest changes from '#{remote_branch}' into '#{current_branch}'..."
say "👉  Run 'git merge #{remote_branch}' to merge the changes."
